{"map":"{\"version\":3,\"sources\":[\"/Users/stagiaire/pokemon-app/src/components/Pokemon/Pokemon.js\",\"/Users/stagiaire/pokemon-app/src/App.js\",\"/Users/stagiaire/pokemon-app/src/serviceWorker.js\",\"/Users/stagiaire/pokemon-app/src/index.js\"],\"names\":[\"Pokemon\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"name\",\"weight\",\"abilities\",\"image\",\"_this2\",\"fetch\",\"idPokemon\",\"then\",\"response\",\"json\",\"responseJson\",\"setState\",\"ability\",\"sprites\",\"front_default\",\"catch\",\"error\",\"console\",\"getPokemon\",\"react_default\",\"a\",\"createElement\",\"src\",\"alt\",\"Component\",\"listItems\",\"map\",\"number\",\"index\",\"components_Pokemon_Pokemon\",\"toString\",\"key\",\"App\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"yNA4CeA,qBAtCb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAACC,KAAM,GAAGC,OAAQ,EAAGC,UAAW,GAAGC,MAAM,IAFrCX,4EAIN,IAAAY,EAAAT,KACX,OAAOU,MAAM,qCAAqCV,KAAKJ,MAAMe,UAAU,KACtEC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GACLN,EAAKO,SAAS,CAACX,KAAMU,EAAaV,KAClCC,OAAQS,EAAaT,OAAOC,UAAWQ,EAAY,UAAc,GAAGE,QAAQZ,KAC1EG,MAAQO,EAAaG,QAAQC,kBAGhCC,MAAM,SAACC,GACNC,QAAQD,MAAMA,iDAKhBrB,KAAKuB,8CAIL,OACEC,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KAAA,IAAO1B,KAAKI,MAAMC,KAAlB,KACAmB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,IAAK3B,KAAKI,MAAMI,MAAOoB,IAAI,YAChCJ,EAAAC,EAAAC,cAAA,MAAA,KAAA,mBAAsB1B,KAAKI,MAAMG,UAAjC,MACAiB,EAAAC,EAAAC,cAAA,MAAA,KAAA,YAAe1B,KAAKI,MAAME,OAA1B,gBA9BcuB,EAAAA,YCEhBC,EADU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAE,EAAE,EAAE,EAAE,GACXC,IAAI,SAACC,EAAOC,GAAR,OAC5BT,EAAAC,EAAAC,cAACQ,EAAD,CAASvB,UAAWqB,EAAOG,WAAYC,IAAKH,MAkB/BI,cAdb,SAAAA,EAAYzC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqC,IACjBxC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuC,GAAAlC,KAAAH,KAAMJ,KACDQ,MAAQ,CAACC,KAAM,GAAGC,OAAQ,EAAGC,UAAW,GAAGC,MAAM,IAFrCX,wEAMjB,OACE2B,EAAAC,EAAAC,cAAA,KAAA,KAAKI,UATOD,EAAAA,WCGES,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOpB,EAAAC,EAAAC,cAACmB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtC,KAAK,SAAAuC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, { Component } from 'react';\\n// import logo from './logo.svg';\\n\\n\\nclass Pokemon extends Component {\\n\\n  constructor(props) {\\n    super(props);\\n    this.state = {name: \\\"\\\",weight: 0, abilities: [],image:\\\"\\\"};\\n  }\\n  getPokemon() {\\n    return fetch('https://pokeapi.co/api/v2/pokemon/'+this.props.idPokemon+\\\"/\\\")\\n    .then((response) => response.json())\\n    .then((responseJson) => {\\n      this.setState({name: responseJson.name,\\n      weight :responseJson.weight,abilities :responseJson['abilities'][0].ability.name,\\n        image : responseJson.sprites.front_default\\n      \\n      })    })\\n    .catch((error) => {\\n      console.error(error);\\n    });\\n  }\\n  \\n  componentDidMount() {\\n    this.getPokemon();\\n  }\\n  \\n  render() {\\n    return (\\n      <div>\\n        <h1 > {this.state.name} </h1>\\n        <img src={this.state.image} alt=\\\"pokemon\\\"/>\\n        <div>First Ability : {this.state.abilities}  </div>\\n        <div>Weight : {this.state.weight} kg </div>\\n      \\n\\n      </div>\\n    \\n    )\\n  }\\n}\\n\\n\\nexport default Pokemon;\\n\",\"import React, { Component } from 'react';\\n// import logo from './logo.svg';\\nimport './App.css';\\nimport Pokemon from './components/Pokemon/Pokemon';\\n\\nconst numbers = [1, 2, 3, 4, 5,6,7,8,9];\\nconst listItems = numbers.map((number,index) =>\\n  <Pokemon idPokemon={number.toString()} key={index}/>\\n);\\nclass App extends Component {\\n\\n  constructor(props) {\\n    super(props);\\n    this.state = {name: \\\"\\\",weight: 0, abilities: [],image:\\\"\\\"};\\n  }\\n \\n  render() {\\n    return (\\n      <ul>{listItems}</ul>\\n    \\n    )\\n  }\\n}\\n\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,n){},15:function(e,t,n){},16:function(e,t,n){\"use strict\";n.r(t);var i=n(0),a=n.n(i),o=n(7),r=n.n(o),c=(n(14),n(1)),l=n(2),s=n(4),u=n(3),m=n(5),h=(n(15),function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(s.a)(this,Object(u.a)(t).call(this,e))).state={name:\"\",weight:0,abilities:[],image:\"\"},n}return Object(m.a)(t,e),Object(l.a)(t,[{key:\"getPokemon\",value:function(){var e=this;return fetch(\"https://pokeapi.co/api/v2/pokemon/\"+this.props.idPokemon+\"/\").then(function(e){return e.json()}).then(function(t){e.setState({name:t.name,weight:t.weight,abilities:t.abilities[0].ability.name,image:t.sprites.front_default})}).catch(function(e){console.error(e)})}},{key:\"componentDidMount\",value:function(){this.getPokemon()}},{key:\"render\",value:function(){return a.a.createElement(\"div\",null,a.a.createElement(\"h1\",null,\" \",this.state.name,\" \"),a.a.createElement(\"img\",{src:this.state.image,alt:\"pokemon\"}),a.a.createElement(\"div\",null,\"First Ability : \",this.state.abilities,\"  \"),a.a.createElement(\"div\",null,\"Weight : \",this.state.weight,\" kg \"))}}]),t}(i.Component)),f=[1,2,3,4,5,6,7,8,9].map(function(e,t){return a.a.createElement(h,{idPokemon:e.toString(),key:t})}),b=function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(s.a)(this,Object(u.a)(t).call(this,e))).state={name:\"\",weight:0,abilities:[],image:\"\"},n}return Object(m.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return a.a.createElement(\"ul\",null,f)}}]),t}(i.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(a.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n(16)}},[[8,1,2]]]);","extractedComments":[]}